import lol.*

  
describe "testLol" {
	const torre = new Torre()
	const torreDebilitada = new Torre(vida=1)
	const torreDestruida = new Torre(vida=0)
	
	
	test "Zed con un espada realiza 20% mas de dmg a la torre" {
		zed.arma(espada)
		
		torre.recibirAtaque(zed)
		
		assert.equals(torre.vida(),368)
	}
	
	test "Zed con un martillo realiza 25% mas de dmg a la torre" {	
		zed.arma(martillo)
		
		torre.recibirAtaque(zed)
		
		assert.equals(torre.vida(),362.5)
	}
	test "Zed con un arco realiza 5% mas de dmg a la torre" {
		zed.arma(arco)
	
		torre.recibirAtaque(zed)
	
		assert.equals(torre.vida(),384.5)
	}
	
	test "Fizz con mana suficiente para realizar un hechizo realiza el doble de su habilidad como dmg a la torre"{
		fizz.mana(120)
		
		torre.recibirAtaque(fizz)
		
		assert.equals(torre.vida(), 340)
	}
	
	test "Fizz con mana suficiente para realizar un hechizo al atacar a la torre pierde mana"{
		fizz.mana(120)
		
		torre.recibirAtaque(fizz)
		
		assert.equals(60, fizz.mana())
	}
	
	test "Fizz sin mana suficiente para realizar un hechizo al atacar se concentra"{
		fizz.mana(40)
		
		torre.recibirAtaque(fizz)
		
		assert.equals(65, fizz.mana())
	}
	
	test "Fizz sin mana suficiente para realizar un hechizo al atacar no da√±a a la torre"{
		fizz.mana(40)
		
		torre.recibirAtaque(fizz)
		
		assert.equals(500, torre.vida())
	}
	
	test "si la torre tiene vida mayor a 0 no esta destruida"{
		assert.notThat(torreDebilitada.estaDestruida())
	}
	
	test "si la torre no tiene vida  esta destruida"{
		assert.that(torreDestruida.estaDestruida())
	}
	
	test "Si Zed destruye la torre sube de nivel" {
		zed.arma(espada)
		
		torreDebilitada.recibirAtaque(zed)
		
		assert.equals(185, zed.ataque())
	}
	
	test "Si Zed no destruye la torre no sube de nivel" {
		zed.arma(espada)
		
		torre.recibirAtaque(zed)
		
		assert.equals(110, zed.ataque())
	}
	
	test "Si Fizz destruye la torre sube de nivel aumentando su mana" {
		
		torreDebilitada.recibirAtaque(fizz)
		
		assert.equals(110, fizz.mana())
	}
	
	test "Si Fizz destruye la torre sube de nivel aumentando su habilidad" {
		
		torreDebilitada.recibirAtaque(fizz)
		
		assert.equals(180, fizz.habilidad())
	}
	
}