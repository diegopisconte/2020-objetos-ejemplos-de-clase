import aves.*

describe "Intro a Colecciones" {
	// Algunas pruebas rápidas con conjuntos numéricos
	test "Filtrar pares" {
		const pares = [1,2,3,4,5,6,7].filter {numero => numero.even()}
		assert.equals([2,4,6], pares)
	}
	test "Obtener dobles" {
		const dobles = [1,2,3,4].map {numero => numero * 2}
		assert.equals([2, 4, 6, 8], dobles)
	}
	test "Saber si alguno cumple con que su doble es mayor a 10" {
		assert.that([1,2,3,4,5,6,7].any {numero => numero * 2 > 10})
	}
	
	// Jugamos con el dominio de las aves que tienen energía y vuelan 
	test "Filtrar aves en base a su energia" {
		const avesFiltradas = muchasAves.filter {ave => ave.energia() > 40}
		assert.equals(2, avesFiltradas.size())
	}
	test "Sumar energía de aves mapeando" {
		const energias = muchasAves.map {ave => ave.energia()}
		assert.equals(180, energias.sum())
	}
	test "Sumar energía de aves con sum directamente" {
		assert.equals(180, muchasAves.sum {ave => ave.energia()})
	}
	test "Hacer que las aves vuelen" {
		muchasAves.forEach {ave => ave.vola()}
		const energias = muchasAves.map {ave => ave.energia()} 
		assert.equals([20,40,90], energias)
	}

	// Pruebas para ver diferencias y similitudes entre sets y listas
	test "Los sets no tienen orden" {
		assert.equals(#{5,7,2,3}, #{3,7,5,2})
	}
	test "Los sets no tienen repetidos" {
		assert.equals(#{5,7,2,3}, #{5,7,2,3,5,7})
	}
	test "Dos sets son distintos si existe al menos un elemento que está en uno y no en el otro" {
		assert.notEquals(#{5,7}, #{5,7,2,3,5,7})
	}
	test "Las listas tienen orden" {
		assert.notEquals([5,7,2,3], [3,7,5,2])
	}
	test "Las listas tienen repetidos" {
		assert.notEquals([5,7,2,3], [5,7,2,3,5,7])
	}
	test "Dos listas son iguales si tienen los mismos elementos en el mismo orden" {
		// Armo la segunda lista concatenando para recordar la diferencia entre igualdad e identidad
		assert.equals([5,7,2,3], [5,7]+[2,3])
	}
	test "Los sets y las listas no son lo mismo" {
		assert.notEquals(#{1,2,3}, [1,2,3])
	}
	test "Las listas no son inmutables" {
		const list = []
		list.add(7)
		assert.equals(1, list.size())
	}
	test "Los sets no son inmutables" {
		const set = #{}
		set.add(7)
		assert.equals(1, set.size())
	}
}