import model.equiposDeQuidditch.*
import model.armadoDeEquipo.*
import agregadorDeJugadores.*

describe "Armado de equipos válidos" {
	
	const armadorDeEquipos = new ArmadorDeEquipos()

	test "Un equipo con la cantidad correcta de guardianes, buscadores, golpeadores y cazadores se puede armar"{
		agregadorDeJugadores.agregarTodosLosJugadoresNecesarios(armadorDeEquipos)
		const equipoValido = armadorDeEquipos.armarEquipo()
		assert.equals(7, equipoValido.integrantes().size())
	}
	
	test "Un equipo sin jugadores no está bien armado" {
		assert.throwsException({armadorDeEquipos.armarEquipo()})
	}
	
	test "Un equipo con menos golpeadores de los necesarios no está bien armado"{
		agregadorDeJugadores.agregarBuscador(armadorDeEquipos)
		agregadorDeJugadores.agregarGuardian(armadorDeEquipos)
		agregadorDeJugadores.agregarCazadores(armadorDeEquipos)
		agregadorDeJugadores.agregarGolpeador(armadorDeEquipos)
		assert.throwsException({armadorDeEquipos.armarEquipo()})
	}
	test "Un equipo con menos buscadores de los necesarios no está bien armado"{
		agregadorDeJugadores.agregarGuardian(armadorDeEquipos)
		agregadorDeJugadores.agregarCazadores(armadorDeEquipos)
		agregadorDeJugadores.agregarGolpeadores(armadorDeEquipos)
		assert.throwsException({armadorDeEquipos.armarEquipo()})
	}
	test "Un equipo con menos cazadores de los necesarios no está bien armado"{
		agregadorDeJugadores.agregarBuscador(armadorDeEquipos)
		agregadorDeJugadores.agregarGuardian(armadorDeEquipos)
		agregadorDeJugadores.agregarCazador(armadorDeEquipos)
		agregadorDeJugadores.agregarGolpeadores(armadorDeEquipos)
		assert.throwsException({armadorDeEquipos.armarEquipo()})
	}
	test "Un equipo con menos guardianes de los necesarios no está bien armado"{
		agregadorDeJugadores.agregarBuscador(armadorDeEquipos)
		agregadorDeJugadores.agregarCazadores(armadorDeEquipos)
		agregadorDeJugadores.agregarGolpeadores(armadorDeEquipos)
		assert.throwsException({armadorDeEquipos.armarEquipo()})
	}
	
	test "Un equipo con demasiados guardianes no está bien armado"{
		agregadorDeJugadores.agregarTodosLosJugadoresNecesarios(armadorDeEquipos)
		agregadorDeJugadores.agregarGuardian(armadorDeEquipos)
		assert.throwsException({armadorDeEquipos.armarEquipo()})
	}
	test "Un equipo con demasiados cazadores no está bien armado"{
		agregadorDeJugadores.agregarTodosLosJugadoresNecesarios(armadorDeEquipos)
		agregadorDeJugadores.agregarCazador(armadorDeEquipos)
		assert.throwsException({armadorDeEquipos.armarEquipo()})
	}
	test "Un equipo con demasiados buscadores no está bien armado"{
		agregadorDeJugadores.agregarTodosLosJugadoresNecesarios(armadorDeEquipos)
		agregadorDeJugadores.agregarBuscador(armadorDeEquipos)
		assert.throwsException({armadorDeEquipos.armarEquipo()})
	}
	test "Un equipo con demasiados golpeadores no está bien armado"{
		agregadorDeJugadores.agregarTodosLosJugadoresNecesarios(armadorDeEquipos)
		agregadorDeJugadores.agregarGolpeador(armadorDeEquipos)
		assert.throwsException({armadorDeEquipos.armarEquipo()})
	}
}