import quidditch.*

describe "Quidditch" {

	test "El manejo de escoba de un jugador depende de sus skills y su peso" {
		const nimbus = new Nimbus(2005, 50) 
		const unJugador = new Jugador(10, 2, nimbus)
		assert.equals(5, unJugador.nivelDeManejoDeEscoba())
	}
	
	test "La velocidad de una Nimbus depende de sus aï¿½os y su salud" {
		const nimbus = new Nimbus(2005, 50)
		assert.equals(34, nimbus.velocidad())
	}

	test "La velocidad de una Saeta de Fuego es constante" {
		assert.equals(100, saetaDeFuego.velocidad())
	}
	
	test "La velocidad de un jugador depende de su escoba y su manejo de escoba" {
		const harry = new Jugador(10, 2, saetaDeFuego)
		const velocidadSaeta = 100
		const manejoDeEscobaDeHarry = 5
		assert.equals(manejoDeEscobaDeHarry * velocidadSaeta,
			harry.velocidad()
		)
	}
	
	test "La habilidad de un jugador depende de su velocidad y sus skills" {
		const harry = new Jugador(10, 2, saetaDeFuego)
		assert.equals(510, harry.habilidad())
	}
	
	test "Un jugador le pasa el trapo a otro si es el doble de habilidoso" {
		const harry = new Jugador(10, 2, saetaDeFuego)
		const ginny = new Jugador(1, 1, saetaDeFuego)
		assert.that(harry.lePasaElTrapoA(ginny))
	}
	
	test "Si a un jugador lo golpea una bludger pierde 2 skills" {
		const harry = new Jugador(10, 2, saetaDeFuego)
		harry.serGolpeado()
		assert.equals(8, harry.skills())
	}
	test "Si a un jugador con una Nimbus lo golpea una bludger, su escoba pierde salud" {
		const nimbus = new Nimbus(2001, 100)
		const harry = new Jugador(10, 2, nimbus)
		harry.serGolpeado()
		assert.equals(90, nimbus.salud())
	}
}