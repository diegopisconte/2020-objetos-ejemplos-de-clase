import excepciones.*

describe "Excepciones" {

	test "Cuando algo falla, el framework de testeo lanza una excepcion" {
		assert.equals(2, 4)
	}
	test "Cuando algo explota, el framework de testeo lo trata como un error no un fallo" {
		assert.equals(2, 7/0)
	}
	test "Validar que salta una excepcion cualquiera" {
		assert.throwsException( { 7 / 0 })
	}

	test "El test falla si no salta ninguna excepcion cuando eso se espera" {
		assert.throwsException({ "hola".length()})
	}

	test "Se puede testear por clase + mensaje" {
		assert.throwsExceptionLike(new UserException(message = "hola"), { => throw new UserException(message = "hola")})
	}

	test "Se puede testear por clase + mensaje: falla si no coincide la clase" {
		assert.throwsExceptionLike(new Exception(message = "hola"), { => throw new UserException(message = "hola")})
	}

	test "Se puede testear por clase + mensaje: falla si no coincide el mensaje" {
		assert.throwsExceptionLike(new UserException(message = "hola"), { => throw new UserException(message = "chau")})
	}

	test "Se puede testear por mensaje solamente" {
		assert.throwsExceptionWithMessage("hola", { => throw new UserException(message = "hola")})
	}

	test "Se puede testear por mensaje solamente: falla si no coincide el mensaje" {
		assert.throwsExceptionWithMessage("chau", { => throw new UserException(message = "hola")})
	}

	test "Se puede testear por clase solamente" {
		assert.throwsExceptionWithType(new UserException(), { => throw new UserException(message = "hola")})
	}

	test "Se puede testear por clase solamente: falla si no coincide la clase" {
		assert.throwsExceptionWithType(new Exception(), { => throw new UserException(message = "hola")})
	}

}

